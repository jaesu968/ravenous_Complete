{"ast":null,"code":"var _jsxFileName = \"/Users/jaesu/VSCode_Websites/ravenous_Complete/src/components/SearchBar/SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./SearchBar.module.css\";\n// improt prop types \nimport PropTypes from \"prop-types\"; // so can use prop types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\"\n};\nconst SearchBar = _ref => {\n  _s();\n  let {\n    onSubmit\n  } = _ref;\n  // need to reflect the changes in state when the user interacts with the search bar\n  // 3 state variables and 3 state setter functions\n  // first state variable - search term located in the the search input \n  // second state variable - location term located in the location input\n  // third state variable - the selected sorting option to use\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const [locationTerm, setLocationTerm] = React.useState(\"\");\n  const [sortBy, setSortBy] = React.useState(\"best_match\");\n\n  // add a helper function to check active state\n  const getSortByClass = sortByOption => {\n    if (sortByOptions[sortByOption] === sortBy) {\n      return styles.active;\n    }\n    return '';\n  };\n\n  // 3 functions to update the state variables\n  // 1. update the search term\n  const handleSearchTermChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  // 2. update the location term\n  const handleLocationTermChange = event => {\n    setLocationTerm(event.target.value);\n  };\n  // 3. update the sort by option\n  // modify this function to accept sortByOption as an argument\n  const handleSortByChange = sortByOption => {\n    setSortBy(sortByOptions[sortByOption]);\n  };\n  // render the sort by options\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map(sortByOption => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: getSortByClass(sortByOption),\n        onClick: () => handleSortByChange(sortByOption),\n        children: sortByOption\n      }, sortByOptionValue, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    });\n  };\n  // add feedback to the user when search \"Let's Go\" button is clicked\n  // should log \"Searching Yelp with Pizza, Brooklyn, best_match\" every time the button is clicked\n  // until integration with Yelp API is done\n  const handleSearch = event => {\n    event.preventDefault();\n    onSubmit(searchTerm, locationTerm, sortBy);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.SearchBar,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarSortOptions,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: renderSortByOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarFields,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search-businesses\",\n        className: styles.visuallyHidden,\n        children: \"Search Businesses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-businesses\",\n        name: \"search-businesses\",\n        placeholder: \"Search Businesses\",\n        onChange: handleSearchTermChange,\n        value: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search-location\",\n        className: styles.visuallyHidden,\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search-location\",\n        name: \"search-location\",\n        placeholder: \"Where?\",\n        onChange: handleLocationTermChange,\n        value: locationTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.SearchBarSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: handleSearch,\n        children: \"Let's Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n// search bar prop types\n_s(SearchBar, \"QkPGVEuO6CJur52ABG2GRKUku+g=\");\n_c = SearchBar;\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","styles","PropTypes","jsxDEV","_jsxDEV","sortByOptions","SearchBar","_ref","_s","onSubmit","searchTerm","setSearchTerm","locationTerm","setLocationTerm","sortBy","setSortBy","getSortByClass","sortByOption","active","handleSearchTermChange","event","target","value","handleLocationTermChange","handleSortByChange","renderSortByOptions","Object","keys","map","sortByOptionValue","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSearch","preventDefault","SearchBarSortOptions","SearchBarFields","htmlFor","visuallyHidden","id","name","placeholder","onChange","SearchBarSubmit","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/jaesu/VSCode_Websites/ravenous_Complete/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport styles from \"./SearchBar.module.css\";\n// improt prop types \nimport PropTypes from \"prop-types\"; // so can use prop types\n\n\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n};\n\nconst SearchBar = ( {onSubmit} ) => {\n\n// need to reflect the changes in state when the user interacts with the search bar\n// 3 state variables and 3 state setter functions\n// first state variable - search term located in the the search input \n// second state variable - location term located in the location input\n// third state variable - the selected sorting option to use\n const [searchTerm, setSearchTerm] = React.useState(\"\");\n const [locationTerm, setLocationTerm] = React.useState(\"\");\n const [sortBy, setSortBy] = React.useState(\"best_match\");\n\n // add a helper function to check active state\n const getSortByClass = (sortByOption) => {\n  if (sortByOptions[sortByOption] === sortBy){\n    return styles.active;\n  }\n  return '';\n };\n\n// 3 functions to update the state variables\n// 1. update the search term\nconst handleSearchTermChange = (event) => {\n  setSearchTerm(event.target.value);\n};\n// 2. update the location term\nconst handleLocationTermChange = (event) => {\n  setLocationTerm(event.target.value);\n};\n// 3. update the sort by option\n// modify this function to accept sortByOption as an argument\nconst handleSortByChange = (sortByOption) => {\n  setSortBy(sortByOptions[sortByOption]);\n};\n// render the sort by options\n  const renderSortByOptions = () => {\n    return Object.keys(sortByOptions).map((sortByOption) => {\n      let sortByOptionValue = sortByOptions[sortByOption];\n      return <li\n      key={sortByOptionValue}\n      className={getSortByClass(sortByOption)}\n      onClick={() => handleSortByChange(sortByOption)}\n      >\n      {sortByOption}\n      </li>;\n    });\n  };\n  // add feedback to the user when search \"Let's Go\" button is clicked\n  // should log \"Searching Yelp with Pizza, Brooklyn, best_match\" every time the button is clicked\n  // until integration with Yelp API is done\n  const handleSearch = (event) => {\n    event.preventDefault();\n    onSubmit(searchTerm, locationTerm, sortBy);\n  };\n\n\n  return (\n    <div className={styles.SearchBar}>\n      <div className={styles.SearchBarSortOptions}>\n        <ul>{renderSortByOptions()}</ul>\n      </div>\n      <div className={styles.SearchBarFields}>\n        <label htmlFor=\"search-businesses\" className={styles.visuallyHidden}>\n          Search Businesses\n        </label>\n        <input\n        id=\"search-businesses\"\n        name=\"search-businesses\" \n        placeholder=\"Search Businesses\"\n        onChange={handleSearchTermChange}\n        value={searchTerm} />\n        <label htmlFor=\"search-location\" className={styles.visuallyHidden}>\n          Location\n        </label>\n        <input \n        id=\"search-location\"\n        name=\"search-location\"\n        placeholder=\"Where?\"\n        onChange={handleLocationTermChange}\n        value={locationTerm} />\n      </div>\n      <div className={styles.SearchBarSubmit}>\n        <a onClick={handleSearch}>Let's Go</a>\n      </div>\n    </div>\n  );\n};\n\n// search bar prop types\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}